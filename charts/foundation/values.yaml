global:
  project_id: ""
  env: ""
  internal_network: "10.0.0.0/8"
  vpc_access_network: "10.0.0.0/8"

api_gateway:
  certificate: ""
  reserved_ip_name: ""

rabbitmq:
  enabled: true
  podLabels:
    env: env
    tags.datadoghq.com/env: env
    tags.datadoghq.com/service: rabbitmq
  statefulsetLabels:
    env: env
    tags.datadoghq.com/env: env
    tags.datadoghq.com/service: rabbitmq
  clustering:
    forceBoot: false
  fullnameOverride: rabbitmq
  persistence:
    size: 1Gi
  replicaCount: 3
  auth:
    erlangCookie: X9je$e@erswjHn!
    username: guest
    password: guest
  ingress:
    enabled: false
  image:
    debug: false
    repository: bitnami/rabbitmq
    tag: 3.11.2
  serviceAccount:
    name: "backend"
    create: false
  clusterDomain: cluster.local
  containerPorts:
    metrics: 9419
  service:
    portNames:
      metrics: metrics
    ports:
      metrics: 9419
  metrics:
    enabled: true
    plugins: "rabbitmq_prometheus"
    serviceMonitor:
      enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9419"
  extraConfiguration: |-
    tcp_listen_options.keepalive = true
    tcp_listen_options.exit_on_close = true
    prometheus.return_per_object_metrics = true
